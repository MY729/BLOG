(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{438:function(s,t,a){"use strict";a.r(t);var e=a(56),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试"}},[s._v("#")]),s._v(" 面试")]),s._v(" "),a("h2",{attrs:{id:"part1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#part1"}},[s._v("#")]),s._v(" part1")]),s._v(" "),a("p",[s._v("循环渐进的一个webpack面试过程")]),s._v(" "),a("h3",{attrs:{id:"_1-webpack中的module是指什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack中的module是指什么"}},[s._v("#")]),s._v(" 1. webpack中的module是指什么？")]),s._v(" "),a("p",[s._v("指的前端的模块")]),s._v(" "),a("p",[s._v("webpack支持的 ESModule , CommonJS, 静态资源（font\\css\\video\\json）等")]),s._v(" "),a("p",[s._v("各模块的导入导出：\nESModule： import/export\nCommonJS：require/module.exports\ncss: @import")]),s._v(" "),a("h3",{attrs:{id:"_2-webpack如何表达自己的依赖关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack如何表达自己的依赖关系"}},[s._v("#")]),s._v(" 2. webpack如何表达自己的依赖关系")]),s._v(" "),a("p",[s._v("通过在使用的地方定义导入的语句，如：\nESModule： import\nCommonJS：require\ncss: @import")]),s._v(" "),a("p",[s._v("webpack 通过解析AST语法树，识别导入的这些标识，构建出最终的bundle")]),s._v(" "),a("h3",{attrs:{id:"_3-chunk-和-bundle-的区别是什么-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-chunk-和-bundle-的区别是什么-重要"}},[s._v("#")]),s._v(" 3. chunk 和 bundle 的区别是什么 （重要）")]),s._v(" "),a("p",[s._v("::: chunk的概念\nchunk是webpack打包过程中modules的集合，是"),a("code",[s._v("打包过程中")]),s._v("的概念")]),s._v(" "),a("p",[s._v("webpack通过引用关系逐个打包模块，这些模块就形成了一个chunk, 多个入口模块打包，会有多个chunk\n:::")]),s._v(" "),a("p",[s._v("::: bundle的概念\nbundle是webpack是最终输出的打包好的文件\n:::")]),s._v(" "),a("ul",[a("li",[s._v("二者的关系区别")])]),s._v(" "),a("p",[s._v("大多数情况下 一个chunk会产生一个bundle\n但是加了sourcemap会产生一个chunk对应两个bundle的结果")]),s._v(" "),a("h4",{attrs:{id:"splik-chunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splik-chunk"}},[s._v("#")]),s._v(" splik chunk")]),s._v(" "),a("p",[s._v("分割chunk")]),s._v(" "),a("p",[s._v("配置会产生几个chunk")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 配置一些优化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("optimization")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("runtimeChunk")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'single'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 浏览器在运行时，导入导出所包含的一些代码，单独放在一个chunk")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("splitChunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("cacheGroups")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("commons")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果一个包至少被两个chunk引用 就可以单独提出一个chunk")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("chunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initial"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minChunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("minSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 达到一定的体积才会计算一个chunk，为0是不限制")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("vendor")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("node_modules")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("chunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"initial"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vendor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("enforce")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_4-plugin-和-loader分别是做什么的-怎么工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-plugin-和-loader分别是做什么的-怎么工作的"}},[s._v("#")]),s._v(" 4. plugin 和 loader分别是做什么的？ 怎么工作的？")]),s._v(" "),a("p",[s._v("::: loader概念\nloader是模块转化器，将非js的模块转换为webpack能识别的js模块\n:::")]),s._v(" "),a("p",[s._v("::: plugin概念\nplugin是拓展插件，运行在webpack打包的各个阶段，以事件的形式运作，webpack运行的各个阶段都会广播出对应的事件，插件就会监听对应的事件，做一些自己的事情\n:::")]),s._v(" "),a("p",[s._v("::: compiler 概念\n他是一个对象，包含了webpack环境的所有配置信息，包括options,loader, pulgins等")]),s._v(" "),a("p",[s._v("这个对象在webpack启动的时候实例化的，在全局是唯一的，也可以理解为webpack的示例\n:::")]),s._v(" "),a("p",[s._v("::: compliation 概念\n包含了当前的模块资源，编辑生成的资源")]),s._v(" "),a("p",[s._v("当webpack在开发模式下运行，每当检测到一个文件变化，就会产生一个新的compliation\n:::")]),s._v(" "),a("h3",{attrs:{id:"_5-简单描述一下webpack的打包过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-简单描述一下webpack的打包过程"}},[s._v("#")]),s._v(" 5. 简单描述一下webpack的打包过程")]),s._v(" "),a("ul",[a("li",[s._v("(1) 初始化参数：包括运行的命令shell、webpack.config.js文件里面配置的")]),s._v(" "),a("li",[s._v("(2) 开始编译：这个时候启动了webpack，会初始化compiler对象，加载所有的配置，执行编译")]),s._v(" "),a("li",[s._v("(3) 确定入口: 从entry开始，寻找依赖的模块，再循环模块依赖的模块, 得到一个依赖图")]),s._v(" "),a("li",[s._v("(5) 把所有文件打包成一个文件")])])])}),[],!1,null,null,null);t.default=n.exports}}]);